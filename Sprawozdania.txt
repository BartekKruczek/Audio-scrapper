Sprawozdanie z dnia 21.06.2023
- dalsza optymalizacja i automatyzacja kodu
- dodanie możliwości pobierania transkrypcji, czy to już gotowej czy automatycznie wygenerowanej
- research możliwości oraz technik wyłuskania jak największej ilości informacji z danego filmiku na yt
- zaznajomienie się z możliwościami oraz kompatybilnością bazy huggingface
- uruchomienie kodu źródłowego na wspólnym serwerze
- powierzchowne zaznajomienie się z opcjami łączenia się z przyznaną mocą obliczeniową (grant)

Napotkane problemy:
- youtube bardzo blokuje jakiekolwiek większe pobieranie bez użycia osobistego API key (spoiler; da się)
- znaczne zmniejszenie szybkości pobierania audio bezpośrednio z danej playlisty, a nie z URL konkretnego video
- nieudolna próba zmiany IP podczas pobierania
- zamiana transkrypcji na czytelny format, np. txt

Sprawozdanie z dnia 22.06.2023
- obsługa wyjątków w kodzie źródłowym
- automatyzacja wyciągania jak największej ilości informacji z filmiku
- uhierarchizowanie pobierania
- dalsze zaznajomianie się z podręcznikiem użytkowania PLGrid
- znaczne polepszenie prędkości pobierania treści z internetu

Napotkane problemy:
- ochrona kodu źródłowego przed użytkownikiem
- pobieranie transkrypcji w czytelnym formacie, oraz jej zapisywanie, bez jednoczesnego pobierania audio z video
- bardzo mała ilość video z tranksrypcją w języku polskim (dodaną przez autora)

Cele:
- dodanie możliwości automatycznego przeszukiwania platformy yt, pod kątem podcastów, po wpisaniu godności twórcy
- implementacja zmiany IP
- wyciągnięcie znaczników czasowych z transkrypcji
- lepsze nazewnictwo plików w celu lepszej, przyszłościowej pracy

Sprawozdanie z dnia 23.06.2023 (8:00 - 16:00)
- naprawa pobierania transkrypcji z znacznikami czasowymi i czasem trwania wypowiedzi
- naprawa zapisu plików do osobnych, stosownych folderów
- próba implementacji zmiany IP w kodzie źródłowym
- instalacja oraz implementacja openai whisper, przetestowanie mniejszego modelu na pojedynczym pliku audio
- przetestowanie działania wyszukiwania playlist i podcastów na yt poprzez tagi i nazwisko twórcy na mniejszym zbiorze danych

Napotkane problemy:
- jak sprawdzić czy na serwerze znajduję się już plik, który byśmy chcieli pobrać (wraz z tranksrypcją) -> oszczędność czasu i łącza
- jak zweryfikować, czy dane video/tranksrypcja są pobierane przez inne IP (w trakcie sprawdzania)
- rotacja IP nie działa tak jakbym tego chciał ale widać światełko w tunelu

Sprawozdanie z dnia 26.06.2023 (8:00 - 17:30)
- czystka i porządek na GitHubie
- dalsza automatyzacja kodu na jeszcze większym zbiorze danych
- obserwacja oraz analiza działania OpenAI Whispera oraz jego odpowiednika (faster-whisper), lokalnie na większym zbiorze danych
- różnice w czasie oraz formie pobierania przez obydwa w/w modele (także różnice wynikające z wybrania różnych wielkościowo modeli), lokalnie
- zapis transkrypcji uzyskanej przez Whispera do osobnych plików .txt, lokalnie
- parcie na przód z dostępen do Atheny (Cyfronet)

Napotkane problemy:
- instalacja/reinstalacja/deinstalacja niezliczonej ilośći bibliotek w celu uruchomienia dwóch Whisperów (sukces, lokalnie)
- problem z kodowaniem pobranych plików (UTF-8 na 99%) -> bądź problem z poprawnością ścieżki dostępu na serwerze (rozwiązanie w toku)
- próba instalacji i przetestowania faster-whispera na serwerze jako zamiennika (niepowodzenie)
- próba zautomatyzowania pobierania plików, ich transkrypcji oraz działania Whispera z poziomu jednego skryptu (częściowy sukces)